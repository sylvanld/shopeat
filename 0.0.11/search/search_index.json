{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to ShopEat! What is ShopEat? Coming soon... What does ShopEat looks like? Coming soon...","title":"Welcome to ShopEat!"},{"location":"#welcome-to-shopeat","text":"","title":"Welcome to ShopEat!"},{"location":"#what-is-shopeat","text":"Coming soon...","title":"What is ShopEat?"},{"location":"#what-does-shopeat-looks-like","text":"Coming soon...","title":"What does ShopEat looks like?"},{"location":"components/architecture/","text":"ShopEat Architecture Micro-Services Database schemas","title":"ShopEat Architecture"},{"location":"components/architecture/#shopeat-architecture","text":"","title":"ShopEat Architecture"},{"location":"components/architecture/#micro-services","text":"","title":"Micro-Services"},{"location":"components/architecture/#database-schemas","text":"","title":"Database schemas"},{"location":"components/api/","text":"What is API?","title":"What is API?"},{"location":"components/api/#what-is-api","text":"","title":"What is API?"},{"location":"components/api/configuration/","text":"API Configuration","title":"API Configuration"},{"location":"components/api/configuration/#api-configuration","text":"","title":"API Configuration"},{"location":"components/api/reference/","text":"ShopEat API reference","title":"ShopEat API reference"},{"location":"components/api/reference/#shopeat-api-reference","text":"","title":"ShopEat API reference"},{"location":"components/notifier/","text":"What is Notifier?","title":"What is Notifier?"},{"location":"components/notifier/#what-is-notifier","text":"","title":"What is Notifier?"},{"location":"components/notifier/configuration/","text":"Notifier Configuration Mandatory configuration Variable Description SHOPEAT_JWT_SECRET String used to encode JWT (format of access tokens) SHOPEAT_AMQP_BROKER_URL URL of the AMQP broker used to receive notifications from API","title":"Notifier Configuration"},{"location":"components/notifier/configuration/#notifier-configuration","text":"","title":"Notifier Configuration"},{"location":"components/notifier/configuration/#mandatory-configuration","text":"Variable Description SHOPEAT_JWT_SECRET String used to encode JWT (format of access tokens) SHOPEAT_AMQP_BROKER_URL URL of the AMQP broker used to receive notifications from API","title":"Mandatory configuration"},{"location":"deploy/docker/","text":"Deploy with Docker ShopEat official image ShopEat is distributed as a single docker image with multiple entrypoints. So in order to run multiple components: Start by downloading ShopEat docker image docker pull sylvanld/shopeat:{imageTag} Have a look at dockerhub to find available image tags . Then deploy choosen component by specifying a command to the entrypoint docker run sylvanld/shopeat api-start Usage with docker-compose version : \"3.6\" services : shopeat-api : image : sylvanld/shopeat command : api-start environment : SHOPEAT_API_HOST : \"0.0.0.0\" SHOPEAT_API_PORT : 8000 SHOPEAT_AMQP_BROKER_URL : amqp://rabbit:password@rabbitmq SHOPEAT_JWT_SECRET : tartampion SHOPEAT_DATABASE_URL : \"postgresql+asyncpg://postgres:password@database/shopeat\" ports : - 8000:8000 shopeat-notifier : image : sylvanld/shopeat command : notifier-start environment : SHOPEAT_NOTIFIER_HOST : 0.0.0.0 SHOPEAT_NOTIFIER_PORT : 7000 SHOPEAT_JWT_SECRET : tartampion SHOPEAT_AMQP_BROKER_URL : amqp://rabbit:password@rabbitmq ports : - 7000:7000 restart : always database : image : postgres:alpine3.17 ports : - 5432:5432 environment : POSTGRES_USER : postgres POSTGRES_PASSWORD : password restart : always rabbitmq : image : rabbitmq:3-management ports : - 5672:5672 - 15672:15672 environment : RABBITMQ_DEFAULT_USER : rabbit RABBITMQ_DEFAULT_PASS : password restart : always","title":"Deploy with Docker"},{"location":"deploy/docker/#deploy-with-docker","text":"","title":"Deploy with Docker"},{"location":"deploy/docker/#shopeat-official-image","text":"ShopEat is distributed as a single docker image with multiple entrypoints. So in order to run multiple components: Start by downloading ShopEat docker image docker pull sylvanld/shopeat:{imageTag} Have a look at dockerhub to find available image tags . Then deploy choosen component by specifying a command to the entrypoint docker run sylvanld/shopeat api-start","title":"ShopEat official image"},{"location":"deploy/docker/#usage-with-docker-compose","text":"version : \"3.6\" services : shopeat-api : image : sylvanld/shopeat command : api-start environment : SHOPEAT_API_HOST : \"0.0.0.0\" SHOPEAT_API_PORT : 8000 SHOPEAT_AMQP_BROKER_URL : amqp://rabbit:password@rabbitmq SHOPEAT_JWT_SECRET : tartampion SHOPEAT_DATABASE_URL : \"postgresql+asyncpg://postgres:password@database/shopeat\" ports : - 8000:8000 shopeat-notifier : image : sylvanld/shopeat command : notifier-start environment : SHOPEAT_NOTIFIER_HOST : 0.0.0.0 SHOPEAT_NOTIFIER_PORT : 7000 SHOPEAT_JWT_SECRET : tartampion SHOPEAT_AMQP_BROKER_URL : amqp://rabbit:password@rabbitmq ports : - 7000:7000 restart : always database : image : postgres:alpine3.17 ports : - 5432:5432 environment : POSTGRES_USER : postgres POSTGRES_PASSWORD : password restart : always rabbitmq : image : rabbitmq:3-management ports : - 5672:5672 - 15672:15672 environment : RABBITMQ_DEFAULT_USER : rabbit RABBITMQ_DEFAULT_PASS : password restart : always","title":"Usage with docker-compose"},{"location":"deploy/kubernetes/","text":"Deploy on Kubernetes Coming soon...","title":"Deploy on Kubernetes"},{"location":"deploy/kubernetes/#deploy-on-kubernetes","text":"Coming soon...","title":"Deploy on Kubernetes"}]}