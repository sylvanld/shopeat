{"openapi": "3.0.2", "info": {"title": "ShopEat API", "description": "Shopeat is an application that helps you plan the recipes you want to cook,\ncreate shopping lists, and do online shopping with your friends or family.\n\nIt allows you to easily plan your meals and save time and money by organizing your shopping in an efficient way. \nYou can use the app to choose recipes based on your preferences and dietary needs, and then generate a shopping list \nbased on the required ingredients. You can also invite your friends or family to join and contribute to the shopping list,\nwhich can be convenient when organizing shared meals or when you want to share the shopping tasks.", "version": "v1"}, "paths": {"/auth/token": {"post": {"tags": ["Accounts"], "summary": "Get Token", "operationId": "get_token_auth_token_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/CredentialsDTO"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/accounts": {"post": {"tags": ["Accounts"], "summary": "Create Account", "operationId": "create_account_accounts_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AccountCreateDTO"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AccountReadDTO"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/accounts/whoami": {"get": {"tags": ["Accounts"], "summary": "Get Account From Token", "operationId": "get_account_from_token_accounts_whoami_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/AccountReadDTO"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/groups": {"get": {"tags": ["Groups"], "summary": "Search Groups", "description": "Search in groups of which the current user is a member.", "operationId": "search_groups_groups_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"title": "Response Search Groups Groups Get", "type": "array", "items": {"$ref": "#/components/schemas/GroupReadDTO"}}}}}}, "security": [{"OAuth2PasswordBearer": []}]}, "post": {"tags": ["Groups"], "summary": "Create Group", "description": "Create a group of users.\n\nCurrent user is automatically defined as group owner.", "operationId": "create_group_groups_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupWriteDTO"}}}, "required": true}, "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupReadDTO"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/groups/{group_uid}/leave": {"post": {"tags": ["Groups"], "summary": "Leave Group", "description": "Make current user leave a group of which it is a member.\n\nIf group contains others members and you are the only owner,\nyou must delegate ownership of the group to another member before.", "operationId": "leave_group_groups__group_uid__leave_post", "parameters": [{"required": true, "schema": {"title": "Group Uid", "type": "string"}, "name": "group_uid", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/groups/{group_uid}/admin/members": {"post": {"tags": ["Groups"], "summary": "Add Group Member", "description": "Add user as a new member of the group.", "operationId": "add_group_member_groups__group_uid__admin_members_post", "parameters": [{"required": true, "schema": {"title": "Group Uid", "type": "string"}, "name": "group_uid", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/AddMemberDTO"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupMemberDTO"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/groups/{group_uid}/admin/members/{account_uid}": {"put": {"tags": ["Groups"], "summary": "Update Role Of A Group Member", "description": "Update role of a user in the group.", "operationId": "update_role_of_a_group_member_groups__group_uid__admin_members__account_uid__put", "parameters": [{"required": true, "schema": {"title": "Group Uid", "type": "string"}, "name": "group_uid", "in": "path"}, {"required": true, "schema": {"title": "Account Uid", "type": "string"}, "name": "account_uid", "in": "path"}], "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdateMemberDTO"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupMemberDTO"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}, "delete": {"tags": ["Groups"], "summary": "Remove Group Member", "description": "Remove user from group members.", "operationId": "remove_group_member_groups__group_uid__admin_members__account_uid__delete", "parameters": [{"required": true, "schema": {"title": "Group Uid", "type": "string"}, "name": "group_uid", "in": "path"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/GroupMemberDTO"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/notify": {"post": {"summary": "Notify Endpoint", "operationId": "notify_endpoint_notify_post", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/Notification"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"AccountCreateDTO": {"title": "AccountCreateDTO", "required": ["email", "username", "password"], "type": "object", "properties": {"email": {"title": "Email", "type": "string"}, "username": {"title": "Username", "type": "string"}, "password": {"title": "Password", "type": "string"}}}, "AccountReadDTO": {"title": "AccountReadDTO", "required": ["email", "username", "uid"], "type": "object", "properties": {"email": {"title": "Email", "type": "string"}, "username": {"title": "Username", "type": "string"}, "uid": {"title": "Uid", "type": "string"}}}, "AddMemberDTO": {"title": "AddMemberDTO", "required": ["account_uid", "nickname", "role"], "type": "object", "properties": {"account_uid": {"title": "Account Uid", "type": "string"}, "nickname": {"title": "Nickname", "type": "string"}, "role": {"title": "Role", "type": "string"}}}, "CredentialsDTO": {"title": "CredentialsDTO", "required": ["username", "password"], "type": "object", "properties": {"username": {"title": "Username", "type": "string"}, "password": {"title": "Password", "type": "string"}}}, "GroupMemberDTO": {"title": "GroupMemberDTO", "required": ["account_uid", "nickname", "role"], "type": "object", "properties": {"account_uid": {"title": "Account Uid", "type": "string"}, "nickname": {"title": "Nickname", "type": "string"}, "role": {"title": "Role", "type": "string"}}}, "GroupReadDTO": {"title": "GroupReadDTO", "required": ["uid", "name"], "type": "object", "properties": {"uid": {"title": "Uid", "type": "string"}, "name": {"title": "Name", "type": "string"}, "thumbnail_url": {"title": "Thumbnail Url", "type": "string"}}}, "GroupWriteDTO": {"title": "GroupWriteDTO", "required": ["name"], "type": "object", "properties": {"name": {"title": "Name", "type": "string"}, "thumbnail_url": {"title": "Thumbnail Url", "type": "string"}}}, "HTTPValidationError": {"title": "HTTPValidationError", "type": "object", "properties": {"detail": {"title": "Detail", "type": "array", "items": {"$ref": "#/components/schemas/ValidationError"}}}}, "Notification": {"title": "Notification", "required": ["kind", "data"], "type": "object", "properties": {"kind": {"title": "Kind", "type": "string"}, "created": {"title": "Created", "type": "string", "format": "date-time"}, "data": {"title": "Data", "type": "object"}}}, "UpdateMemberDTO": {"title": "UpdateMemberDTO", "required": ["nickname", "role"], "type": "object", "properties": {"nickname": {"title": "Nickname", "type": "string"}, "role": {"title": "Role", "type": "string"}}}, "ValidationError": {"title": "ValidationError", "required": ["loc", "msg", "type"], "type": "object", "properties": {"loc": {"title": "Location", "type": "array", "items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}}, "msg": {"title": "Message", "type": "string"}, "type": {"title": "Error Type", "type": "string"}}}}, "securitySchemes": {"OAuth2PasswordBearer": {"type": "oauth2", "flows": {"password": {"scopes": {}, "tokenUrl": "auth/token"}}}}}, "tags": [{"name": "Accounts", "description": "Endpoints to create and manage accounts, and get access tokens."}]}
